<% content_for :title, "Сумісне Голосуванн — Як Голосує Твій Депутат?" %>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>
    //search
    window.onload = function() {
        var availableTags = [
            <% @party.each do |m| %>
            "<%= m %>",
            <% end %>
        ];
        $( "#party" ).autocomplete({
            source: availableTags
        });
        $("#show_month").click(function(e){
            $("#sort-month").toggleClass("hide");
        });
        $(document).on('click',function(){
            $('.collapse').collapse('hide');
        })
        // load page start ajax GET
//        $.ajax({
//            type: "GET",
            <!--<%# if params[:filter] %>-->
//            url: "<%#= people_path(sort: params[:sort], filter: params[:filter], format: :js, per: params[:per]) %>"
            <!--<%# else %>-->
//            url: "<%#= people_path(sort: params[:sort], filter_min: params[:filter_min], filter_max: params[:filter_max], format: :js, per: params[:per]) %>"
            <!--<%# end %>-->
//        });
    };
</script>
<div id="first-block" class="container people">

    <h1 class="text-uppercase center-justified text-xs-center">
        Сумісне Голосування
    </h1>

    <div class="col-12">
        <%= form_tag(sumisne_holosuvannia_path, method: "get", class: "col-8 form-inline mt-2 mt-md-0 push-2", id: "search-main" ) do  %>
                          <span class="fa-stack">
                            <i class="fa fa-search fa-stack-1x fa-inverse" aria-hidden="true"></i>
                          </span>
        <%= text_field_tag(:party, params[:party]=="Блок Петра Порошенка" ? '' : params[:party] , class: "form-control mr-sm-2" , placeholder: "напр., Блок Петра Порошенка" ) %>
        <i class="fa fa-chevron-down arrow-icon" aria-hidden="true"></i>
        <% end %>
    </div>
</div>

<div class="container">
    <div class="row list-filters clearfix">
        <ul class="col sort-first text-uppercase">
            <li <%= params[:month] == "full" ? "class=disabled": "" %> ><%= link_to "За весь час", sumisne_holosuvannia_path(month: :full) %></li>

            <li <%= params[:month] != "full" ? "class=disabled": "" %> >
                <div class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown"><%= params[:month] != "full" ? month(params[:month]) : "обрати місяць" %>
                        <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <% @month.each do |m| %>
                        <li <%= params[:month] == m.strftime('%Y-%m') ? "class=disabled": "" %> ><%= link_to month(m.strftime('%Y-%m')), params.merge(month: m.strftime('%Y-%m')) %></li>
                        <% end %>
                    </ul>
                </div>
            </li>
        </ul>


        <ul class="social col-4 pull-right text-uppercase">
            <li>
                    <span class="fa-stack ">
                      <i class="fa fa-square-o fa-stack-2x"></i>
                      <i class="fa  fa-download  fa-stack-1x"></i>
                    </span>
                <a href="" >csv</a></li>
            <li><span class="fa-stack ">
                      <i class="fa fa-square-o fa-stack-2x"></i>
                      <i class="fa  fa-download  fa-stack-1x"></i>
                    </span>
                <a href="" >png</a></li>
            <li>
                    <span class="fa-stack ">
                    <i class="fa  fa-share-alt  fa-stack-1x"></i>
                        </span>
                <a href="" >поширити</a>
            </li>
        </ul>
    </div>
</div>

<div class="container">
  <div class="col">
    <h2 class="center-justified text-xs-center text-uppercase">СУМІСНЕ ГОЛОСУВАННЯ <%= params[:party] %></h2>
    <div id="graph">
      <svg ></svg>
    </div>
    <!--<div id="slider" style="width: 960px;"></div>-->
    <%#= link_to 'API', sumisne_holosuvannia_api_path %>
  </div>
  <script>
      var colors = ["#FE6162", "#01AFFF", "#B3B2FE", "#FFDD2D", "#84F1FE", "#F765B2"];
      d3.json("<%= sumisne_holosuvannia_api_path(month: params[:month]) %>", function (data) {
          window.addEventListener('resize', function (event) {
              createGrafic(data);
          });
          createGrafic(data);
          function createGrafic(Data) {
              d3.select("svg").remove();
              var nested_data =  d3.nest().key(function (d) {
                  return d.faction; })
              .rollup( function (vote) {
                  return d3.sum(vote, function (d) {
                      return d.vote_aye;
                  })
              }).entries(Data)
                  .map(function(d){
//                      console.log(d);
                      return { Party: d.key, Value: d.value};

                  });
              var party = [];

              firs_party = nested_data.find(x => x.Party == "<%= params[:party] %>");
              nested_data.forEach(function (p, i) {
                    if (p.Party != firs_party.Party) {
                        party.push({party: p.Party, values: [p.Value, firs_party.Value ]})
                    }
              });

              var result = party.map(function (d) {
                  val = d.values.sort(function (a,b) {
                      return a - b;
                  });
                  if (val[1] == 0){
                      return {party: d.party,  present: 0  }
                  } else {
                      return {party: d.party,  present: Math.round((val[0]/val[1])*100)  }
                  }

              });
              result = result.sort(function (a,b) {
                  return b.present - a.present;
              });
//              console.log(result);
              var svg = d3.select("#graph").append('svg'),
                  margin = {top: 20, right: 40, bottom: 30, left: 40},
                  width = (document.querySelector("#graph").clientWidth) - margin.left - margin.right,
                  height = (document.querySelector("#graph").clientHeight) + margin.top + margin.bottom;
              svg.attr("width", width).attr("height", height)
              var x = d3.scaleBand().rangeRound([0, height - margin.bottom - margin.top ]).padding(0.1),
                  y = d3.scaleLinear().rangeRound([0, width - 10 - margin.left - margin.right]);
              var g = svg.append("g")
                  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
              x.domain(result.map(function(d) { return d.party; }));
              y.domain([0, d3.max(result, function(d) { return d.present; })]);

              d3.select('.domain')
                  .attr("stroke","none");
              var bar = g.selectAll(".bar")
                  .data(result)
                  .enter().append("g");

              bar.append("rect")
                  .attr("class", "bart")
                  .attr("x", 0)
                  .attr("y", function(d) {return x(d.party); })
                  .attr("width", width - 10 - margin.left - margin.right)
                  .attr("height",  15 )
                  .attr("fill", "#E5E5E5");
              bar.append("rect")
                  .attr("class", "baro")
                  .attr("x", 0)
                  .attr("y", function(d) {return x(d.party); })
                  .attr("width", function( d) { return y(d.present);})
                  .attr("height",  15 )
                  .attr("fill", function (d,i) { return colors[i]});
              bar.append("text")
                  .attr("class", "text-uppercase")
                  .attr("y", function(d) {return x(d.party) - margin.top  ; })
                  .attr("dy", ".95em")
                  .attr("style", "fill:#000; font-size:12px; line-height: 18px; font-family: GothaProBol;")
                  .text(function (d) {return d.party});
              bar.append("text")
                  .attr("class", "text-uppercase")
                  .attr("y", function(d) {return x(d.party); })
                  .attr("x", function(d) {return y(d.present) + 8; })
                  .attr("dy", ".95em")
                  .attr("style", "fill:black; font-size:11px; font-family: GothaProMed;")
                  .text(function (d) {return d.present + "%" });
          }
      });
  </script>
</div>